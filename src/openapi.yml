openapi: 3.0.3
info:
  title: Course Picker API
  description: Документация backend-приложения платформы рекомендаций массовых онлайн курсов
  version: 1.0.1
tags:
  - name: "auth"
    description: "Методы для регистрации, авторизации, логаута и обновления токенов"
  - name: "courses"
    description: "Получение курсов"
paths:
  /auth/signup:
    post:
      tags:
      - auth
      summary: Регистрация новго пользователя
      requestBody:
        required: true
        description: Данные пользователя для добавления в базу данных
        content: 
          application/json:
            schema:
              $ref: "#/components/schemas/UserSignup"
      responses:
        200:
          description: Пользовател успешно зарегистрирован
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                    example: "Пользователь успешно создан"
        400:
          description: Такой email или username уже существуют в базе данных
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                    example: "Пользователь уже существует"
        500:
          description: Внутренняя ошибка сервера при сохранении пользователя
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
  /auth/signin:
    post:
      tags: 
      - auth
      summary: "Аутентификация пользователя"
      requestBody:
        required: true
        description: "Данные пользователя для входа (**по почте или логину**)"
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "#/components/schemas/UserEmailLogin"
                - $ref: "#/components/schemas/UserNameLogin"
      responses:
        200:
          description: "Успешная аутентификация, данные совпали"
          content:
            application/json:
              schema:
                properties:
                  accessToken:
                    $ref: "#/components/schemas/JWT"
                  refreshToken:
                    $ref: "#/components/schemas/JWT"
        401:
          description: "Неверные учётные данные"
          content:
            application/json:
              schema:
                properties:
                  error: 
                    type: string
                    example: "Пользователя с таким логином/почтой не существует"
  /auth/refresh-token:
    post:
      tags:
      - auth
      summary: "Получение нового JWT access token"
      parameters:
        - in: header
          name: x-refresh-token
          required: true
          description: "JWT refresh token"
          schema:
            $ref: "#/components/schemas/JWT"
      responses:
        200:
          description: "Токен действителен"
          content:
            application/json:
              schema:
                properties:
                  accessToken:
                    $ref: "#/components/schemas/JWT"
                  refreshToken:
                    $ref: "#/components/schemas/JWT"
        401:
          description: "Истёк срок действия токена"
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                    example: "Рефреш токен недействителен"
        404:
          description: "Токен не найден в коллекции сессий"
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                    example: "Рефреш токен не найден"
  /auth/logout:
    post:
      tags:
        - auth
      summary: "Выход и удаление сессии из коллекции"
      parameters:
        - in: header
          name: x-refresh-token
          required: true
          description: "JWT refresh token"
          schema:
            $ref: "#/components/schemas/JWT"
      responses:
        200:
          description: "Успешный выход"
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                    example: "Успешный выход"
        400:
          description: "Токен не указан"
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                    example: "Рефреш токен не указан"
        404:
          description: "Токен не найден в коллекции сессий"
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                    example: "Рефреш токен не найден"
  /courses/:
    get:
      tags:
        - courses
      summary: "Получение курсов"
      parameters:
        - in: query
          name: pageSize
          description: "Размер страницы (лимит количества курсов в ответе)"
          schema:
            type: integer
            default: 10
            example : 1
        - in: query
          name: pageNumber
          description: "Номер страницы"
          schema:
            type: integer
            default: 1
            example : 1
        - in: query
          name: searchQuery
          description: "Поисковый запрос"
          schema:
            type: string
            default: ""
            example: "программирование"
      responses:
        200:
          description: "Успешный запрос на получение курсов"
          content:
            application/json:
              schema:
                properties:
                  nextPage:
                    type: string
                    nullable: true
                    example: "/courses/?pageSize=10&pageNumber=2&searchQuery=программирование"
                  courses:
                    type: array
                    items:
                      $ref: "#/components/schemas/Course"
components:
  schemas:
    ObjectId:
      description: "Встроенный в MongoDB ID объекта"
      type: string
      example: "607f4ddcca564d31e529c385"
    UserEmail:
      type: object
      properties:
        email:
          type: string
          format: email
    UserName:
      type: object
      properties:
        username:
          type: string
    UserPassword:
      type: object
      properties:
        password:
          type: string
          format: password
          pattern: "^$" # TODO: Выбрать паттерн, реализовать на бекенде
          example: test123
    UserSignup:
      allOf:
        - $ref: "#/components/schemas/UserEmail"
        - $ref: "#/components/schemas/UserName" 
        - $ref: "#/components/schemas/UserPassword"
      required: ["email", "username", "password"]
    UserEmailLogin:
      description: "Схема для входа по адресу почты"
      allOf:
        - $ref: "#/components/schemas/UserEmail"
        - $ref: "#/components/schemas/UserPassword"
      required: ["email", "password"]
    UserNameLogin:
      description: "Схема для входа по логину"
      allOf:
        - $ref: "#/components/schemas/UserName"
        - $ref: "#/components/schemas/UserPassword"
      required: ["username", "password"]
    JWT:
      description: "Схема для описания JWT токена"   
      type: string
      format: JWT
      example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.he0ErCNloe4J7Id0Ry2SEDg09lKkZkfsRiGsdX_vgEg"
    CourseLanguages:
      description: "Массив языков курсов"
      type: array
      items:
        type: string
      example: ["ru"]
    CourseId:
      description: "Уникальный id курса"
      type: string
      example: openedu_2
    CourseName:
      description: "Название курса"
      type: string
      example: "Веб-программирование"
    CourseDescription:
      description: "Полное описание курса"
      type: string
      example: "Полное описание курса"
    CourseShortDescription:
      description: "Короткое описание курса"
      type: string
      example: "Короткое описание курса"
    CourseLink:
      description: "Ссылка на курс"
      type: string
      example: "https://openedu.ru/course/ITMOUniversity/WEBDEV/"
    CoursePreviewImageLink:
      description: "Ссылка на картинку с превью курса"
      type: string
      example: "https://cdn.openedu.ru/f1367c/CACHE/images/cover/itmo_web_s/71c221bca9f9ad3ad57b257ae0ede1e2.png"
    CourseVendor:
      description: "Платформа-поставщик курса"
      type: string
      example: "openedu"
    CourseAuthorName:
      description: "Название/имя автора курса"
      type: string
      example: "Университет ИТМО"
    CourseAuthorLink:
      description: "Ссылка на автора курса"
      type: string
      example: "https://openedu.ru/university/ITMOUniversity/"
    CourseAuthorIcon:
      description: "Ссылка на картинку автора курса"
      type: string
      example: "https://cdn.openedu.ru/f1367c/university-icon/itmo_small_white_rus_100_100.png"
    CourseAuthor:
      description: "Схема объекта автора курса"
      type: object
      properties:
        name:
          $ref: "#/components/schemas/CourseAuthorName"
        link:
          $ref: "#/components/schemas/CourseAuthorLink"
        icon:
          $ref: "#/components/schemas/CourseAuthorIcon"
    CourseDuration:
      description: "Длительность курса"
      type: string
      example: "10w"
    CoursePrice:
      description: "Цена курса"
      type: string
      example: "0"
    Course:
      description: "Схема для описания курса"
      type: object
      properties:
        courseLanguages:
          $ref: "#/components/schemas/CourseLanguages"
        #_id:
        #  $ref: "#/components/schemas/ObjectId"
        id:
          $ref: "#/components/schemas/CourseId"
        courseName:
          $ref: "#/components/schemas/CourseName"
        description:
          $ref: "#/components/schemas/CourseDescription"
        shortDescription:
          $ref: "#/components/schemas/CourseShortDescription"
        link:
          $ref: "#/components/schemas/CourseLink"
        previewImageLink:
          $ref: "#/components/schemas/CoursePreviewImageLink"
        vendor:
          $ref: "#/components/schemas/CourseVendor"
        author:
          $ref: "#/components/schemas/CourseAuthor"
        duration:
          $ref: "#/components/schemas/CourseDuration"
        price:
          $ref: "#/components/schemas/CoursePrice"